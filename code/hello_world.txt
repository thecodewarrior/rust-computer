 outp | addr | data

  0:0 |    0 | 01 04 00 00 00 00 ; frame 0
  6:0 |    6 | 01 03 00 00 00 00 ; push 0
  c:0 |    c |                ; loop:
  c:0 |    c | 01 03 00 00 00 04 ; push 4
 12:0 |   12 | 04 00          ; uadd
 14:0 |   14 | 00             ; nop
 15:0 |   15 | 07 00 00 00 0c ; jmp loop
 1a:0 |   1a |                ; findprimes:
 1a:0 |   1a | 01 04 00 00 00 01 ; frame 1
 20:0 |   20 | 01 03 00 00 00 01 ; push 1
 26:0 |   26 | 01 06 00 00 00 00 ; store .maybe_prime
 2c:0 |   2c |                ; .not_prime:
 2c:0 |   2c | 01 07 00 00 00 00 ; load .maybe_prime
 32:0 |   32 | 01 03 00 00 00 02 ; push 2
 38:0 |   38 | 04 00          ; uadd
 3a:0 |   3a | 01 06 00 00 00 00 ; store .maybe_prime
 40:0 |   40 | 01 03 00 00 00 02 ; push 2
 46:0 |   46 |                ; .test_loop:
 46:0 |   46 | 01 01          ; dup
 48:0 |   48 | 01 07 00 00 00 00 ; load .maybe_prime
 4e:0 |   4e | 01 02          ; swap
 50:0 |   50 | 04 04          ; urem
 52:0 |   52 | 08 00 00 00 00 65 ; ujmp_ez .divisible
 58:0 |   58 | 01 03 00 00 00 01 ; push 1
 5e:0 |   5e | 04 00          ; uadd
 60:0 |   60 | 07 00 00 00 46 ; jmp .test_loop
 65:0 |   65 |                ; .divisible:
 65:0 |   65 | 01 07 00 00 00 00 ; load .maybe_prime
 6b:0 |   6b | 08 03 00 00 00 2c ; ujmp_ne .not_prime
 71:0 |   71 | 01 07 00 00 00 00 ; load .maybe_prime
 77:0 |   77 | 01 01          ; dup
 79:0 |   79 | 01 01          ; dup
 7b:0 |   7b | 01 01          ; dup
 7d:0 |   7d | 01 01          ; dup
 7f:0 |   7f | 01 01          ; dup
 81:0 |   81 | 01 01          ; dup
 83:0 |   83 | 01 00          ; pop
 85:0 |   85 | 01 00          ; pop
 87:0 |   87 | 01 00          ; pop
 89:0 |   89 | 01 00          ; pop
 8b:0 |   8b | 01 00          ; pop
 8d:0 |   8d | 01 00          ; pop
 8f:0 |   8f | 01 00          ; pop
 91:0 |   91 | 07 00 00 00 2c ; jmp .not_prime
